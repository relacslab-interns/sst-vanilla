node {
 os {
  stack_size = 1MB
 }
 app1 { 
  exe = ./run
  argv = 
  launch_cmd = aprun -n 1024 -N 1
  apis = [libfabric, pmi:libfabric]
  env {
    SLURM_NPROCS = 1024
  }
 }
 nic {
  name = snappr
  injection {
   bandwidth = 10.0GB/s
   latency = 50ns
   mtu = 1024
   credits = 64KB
   send_state {
     group = state
     type = ftq_calendar
     output = ftq
     epoch_length = 1us
    }
   recv_state {
     group = state
     type = ftq_calendar
     output = ftq
     epoch_length = 1us
    }
  }
  ejection {
   latency = 50ns
  }
 }
 memory {
  name = snappr
  channel_bandwidth = 7GB/s
  num_channels = 10
  latency = 10ns
 }
 proc {
  ncores = 4
  frequency = 2GHz
 }
 name = simple
}


switch {
 name = snappr
 link {
  bandwidth = 10.0GB/s
  latency = 100ns
  credits = 8KB
  xmit_active {
   group = test
   type = accumulator
  }
  xmit_idle {
   group = test
   type = accumulator
  }
  xmit_stall {
   group = test
   type = accumulator
  }
 }
 logp {
  bandwidth = 1GB/s
  out_in_latency = 100ns
  hop_latency = 100ns
 }
}

topology {
  name = dragonfly
  geometry = [32,9]
  h = 16
  inter_group = circulant
  concentration = 16
}

switch {
  router { 
    name = dragonfly_minimal
  }
}
