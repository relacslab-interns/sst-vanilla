
node {
 app1 {
  indexing = block
  allocation = first_available
  name = mpi_smp_collectives
  launch_cmd = aprun -n 64 -N 4
  start = 0ms
  message_size = 1KB
  mpi {
   alltoall = bruck
   allgather = bruck
   smp_optimize = true
  }
 }
 app2 {
  indexing = block
  allocation = first_available
  name = mpi_smp_collectives
  launch_cmd = aprun -n 64 -N 4
  start = 0ms
  message_size = 1KB
  mpi {
   alltoall = direct
   allgather = ring
   smp_optimize = true
  }
 }
 nic {
  name = pisces
  injection {
   mtu = 4096
   arbitrator = cut_through
   bandwidth = 1.0GB/s
   latency = 50ns
   credits = 64KB
  }
 }
 memory {
  name = pisces
  total_bandwidth = 10GB/s
  latency = 10ns
  max_single_bandwidth = 10GB/s
 }
 proc {
  ncores = 4
  frequency = 2GHz
 }
 name = simple
}


switch {
 router {
   name = torus_minimal
 }
 name = pisces
 arbitrator = cut_through
 mtu = 4096
 ejection {
  bandwidth = 1.0GB/s
  latency = 50ns
  credit = 100MB
 }
 link {
  bandwidth = 1.0GB/s
  latency = 100ns
  credits = 64KB
 }
 xbar {
  bandwidth = 10GB/s
 }
 logp {
  bandwidth = 1GB/s
  hop_latency = 100ns
  out_in_latency = 100ns
 }
}

topology {
name = torus
geometry = [4,3,4]
concentration = 2
}


nic {
 injection {
  arbitrator = cut_through
 }
}

