
int x = 0;extern int __offset_x; int __sizeof_x = sizeof(int);static std::function<void(void*)> init_x = [](void* ptr){ new (ptr) int{0}; };sstmac::CppGlobalRegisterGuard x_sstmac_ctor(__offset_x, __sizeof_x, false, "x", std::move(init_x));

struct A {
  int x;
} aInst{};extern int __offset_aInst; int __sizeof_aInst = sizeof(A);static std::function<void(void*)> init_aInst = [](void* ptr){ new (ptr) A; };sstmac::CppGlobalRegisterGuard aInst_sstmac_ctor(__offset_aInst, __sizeof_aInst, false, "aInst", std::move(init_aInst));

void fxn()
{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_x=(int*)(sstmac_global_data + __offset_x); A* sstmac_aInst=(A*)(sstmac_global_data + __offset_aInst); {
  auto l1 = [&]{
    (*sstmac_aInst).x = 0;
    (*sstmac_x) += 5;
  };

  auto l2 = [=]{
    (*sstmac_aInst).x = 0;
    (*sstmac_x) += 5;
  };

  auto l3 = []{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_x=(int*)(sstmac_global_data + __offset_x); A* sstmac_aInst=(A*)(sstmac_global_data + __offset_aInst); {
    (*sstmac_aInst).x = 0;
    (*sstmac_x) += 5;
   }};

  auto l4 = [aInst=(*sstmac_aInst)]{ char* sstmac_global_data = get_sstmac_global_data();int* sstmac_x=(int*)(sstmac_global_data + __offset_x); {
    int y = aInst.x;
    (*sstmac_x) += 5;
   }};

  auto l5 = [x=(*sstmac_x)]{ char* sstmac_global_data = get_sstmac_global_data();A* sstmac_aInst=(A*)(sstmac_global_data + __offset_aInst); {
    (*sstmac_aInst).x = 0;
    int y = x;
   }};

  auto l6 = [=,x=(*sstmac_x)]{
    (*sstmac_aInst).x = 0;
    int y = x;
  };
 }}
#include <sstmac/software/process/cppglobal.h>
#include <sstmac/software/process/memoize.h>

extern int __sizeof_aInst;
int __offset_aInst = 0;extern int __sizeof_x;
int __offset_x = 0;
