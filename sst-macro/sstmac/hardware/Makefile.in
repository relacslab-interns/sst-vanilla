# Makefile.in generated by automake 1.16.1 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

#
#   This file is part of SST/macroscale: 
#                The macroscale architecture simulator from the SST suite.
#   Copyright (c) 2009-2022, NTESS.
#   This software is distributed under the BSD License.
#   Under the terms of Contract DE-NA0003525 with NTESS,
#   the U.S. Government retains certain rights in this software.
#   For more information, see the LICENSE file in the top 
#   SST/macroscale directory.
#


VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
@INTEGRATED_SST_CORE_TRUE@am__append_1 = $(SST_CPPFLAGS) \
@INTEGRATED_SST_CORE_TRUE@	$(PY_CPPFLAGS)
@DARWIN_FALSE@am__append_2 = -lrt
@INTEGRATED_SST_CORE_TRUE@am__append_3 = $(SST_CXXFLAGS)

#clean up warnings on clang

#clean up warnings on clang
@HAVE_MACSDK_TRUE@am__append_4 = $(MACSDK_CFLAGS)
@HAVE_MACSDK_TRUE@am__append_5 = $(MACSDK_CXXFLAGS)
@HAVE_VTK_TRUE@am__append_6 = \
@HAVE_VTK_TRUE@  vtk/vtk_stats.cc \
@HAVE_VTK_TRUE@  vtk/vtkTrafficSource.cc

@HAVE_VTK_TRUE@am__append_7 = \
@HAVE_VTK_TRUE@  vtk/vtk_stats.h \
@HAVE_VTK_TRUE@  vtk/vtkTrafficSource.h

@HAVE_VTK_TRUE@@INTEGRATED_SST_CORE_TRUE@am__append_8 = \
@HAVE_VTK_TRUE@@INTEGRATED_SST_CORE_TRUE@   vtk/statoutputexodus.cc

@HAVE_VTK_TRUE@@INTEGRATED_SST_CORE_TRUE@am__append_9 = \
@HAVE_VTK_TRUE@@INTEGRATED_SST_CORE_TRUE@   vtk/stattraffic.h \
@HAVE_VTK_TRUE@@INTEGRATED_SST_CORE_TRUE@   vtk/statoutputexodus.h

@HAVE_VTK_TRUE@am__append_10 = $(VTK_LDFLAGS)
@HAVE_VTK_TRUE@am__append_11 = $(VTK_LIBS)
@HAVE_VTK_TRUE@am__append_12 = $(VTK_CPPFLAGS)
@HAVE_SST_ELEMENTS_TRUE@am__append_13 = $(SST_ELEMENTS_CPPFLAGS)
@INTEGRATED_SST_CORE_TRUE@am__append_14 = \
@INTEGRATED_SST_CORE_TRUE@  merlin/merlin_nic.cc

subdir = sstmac/hardware
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude/ax_prefix_config_h.m4 \
	$(top_srcdir)/acinclude/check_call_graph.m4 \
	$(top_srcdir)/acinclude/check_clang.m4 \
	$(top_srcdir)/acinclude/check_comm_stats.m4 \
	$(top_srcdir)/acinclude/check_custom_new.m4 \
	$(top_srcdir)/acinclude/check_debug.m4 \
	$(top_srcdir)/acinclude/check_default_includes.m4 \
	$(top_srcdir)/acinclude/check_dlopen.m4 \
	$(top_srcdir)/acinclude/check_dot.m4 \
	$(top_srcdir)/acinclude/check_event_calendar.m4 \
	$(top_srcdir)/acinclude/check_gcc.m4 \
	$(top_srcdir)/acinclude/check_mpi.m4 \
	$(top_srcdir)/acinclude/check_otf2.m4 \
	$(top_srcdir)/acinclude/check_python.m4 \
	$(top_srcdir)/acinclude/check_repo_build.m4 \
	$(top_srcdir)/acinclude/check_sdk.m4 \
	$(top_srcdir)/acinclude/check_spack.m4 \
	$(top_srcdir)/acinclude/check_sst_core.m4 \
	$(top_srcdir)/acinclude/check_sst_elements.m4 \
	$(top_srcdir)/acinclude/check_std.m4 \
	$(top_srcdir)/acinclude/check_stl_replacement.m4 \
	$(top_srcdir)/acinclude/check_thread.m4 \
	$(top_srcdir)/acinclude/check_threading.m4 \
	$(top_srcdir)/acinclude/check_types.m4 \
	$(top_srcdir)/acinclude/check_vtk.m4 \
	$(top_srcdir)/acinclude/check_warnings.m4 \
	$(top_srcdir)/acinclude/check_werror.m4 \
	$(top_srcdir)/acinclude/libtool.m4 \
	$(top_srcdir)/acinclude/ltoptions.m4 \
	$(top_srcdir)/acinclude/ltsugar.m4 \
	$(top_srcdir)/acinclude/ltversion.m4 \
	$(top_srcdir)/acinclude/lt~obsolete.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am \
	$(am__nobase_library_include_HEADERS_DIST) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/sstmac/common/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
am__DEPENDENCIES_1 =
@HAVE_VTK_TRUE@am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
libsstmac_hw_la_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__libsstmac_hw_la_SOURCES_DIST = vtk/vtk_stats.cc \
	vtk/vtkTrafficSource.cc vtk/statoutputexodus.cc \
	logp/logp_nic.cc logp/logp_switch.cc logp/logp_memory_model.cc \
	processor/processor.cc processor/simple_processor.cc \
	processor/instruction_processor.cc common/connection.cc \
	common/packet.cc common/recv_cq.cc memory/memory_model.cc \
	nic/nic.cc noise/noise.cc node/node.cc node/simple_node.cc \
	pisces/pisces.cc pisces/pisces_arbitrator.cc \
	pisces/pisces_buffer.cc pisces/pisces_branched_switch.cc \
	pisces/pisces_crossbar.cc pisces/pisces_nic.cc \
	pisces/pisces_sender.cc pisces/pisces_switch.cc \
	pisces/pisces_tiled_switch.cc pisces/pisces_memory_model.cc \
	sculpin/sculpin_nic.cc sculpin/sculpin_switch.cc \
	sculpin/sculpin.cc snappr/snappr_inport.cc \
	snappr/snappr_outport.cc snappr/snappr_nic.cc \
	snappr/snappr_switch.cc snappr/snappr_mem.cc snappr/snappr.cc \
	network/network_message.cc interconnect/interconnect.cc \
	switch/network_switch.cc topology/fully_connected.cc \
	topology/cascade.cc topology/dragonfly.cc \
	topology/dragonfly_plus.cc topology/fat_tree.cc \
	topology/file.cc topology/torus.cc topology/hypercube.cc \
	topology/coordinates.cc topology/traffic/traffic.cc \
	router/router.cc router/table_routing.cc \
	router/fat_tree_router.cc router/cascade_routing.cc \
	router/dragonfly_routing.cc router/dragonfly_plus_routing.cc \
	router/hypercube_routing.cc router/torus_routing.cc \
	topology/star.cc topology/structured_topology.cc \
	topology/cartesian_topology.cc topology/topology.cc \
	merlin/merlin_nic.cc
am__dirstamp = $(am__leading_dot)dirstamp
@HAVE_VTK_TRUE@am__objects_1 = vtk/vtk_stats.lo \
@HAVE_VTK_TRUE@	vtk/vtkTrafficSource.lo
@HAVE_VTK_TRUE@@INTEGRATED_SST_CORE_TRUE@am__objects_2 = vtk/statoutputexodus.lo
@INTEGRATED_SST_CORE_TRUE@am__objects_3 = merlin/merlin_nic.lo
am_libsstmac_hw_la_OBJECTS = $(am__objects_1) $(am__objects_2) \
	logp/logp_nic.lo logp/logp_switch.lo logp/logp_memory_model.lo \
	processor/processor.lo processor/simple_processor.lo \
	processor/instruction_processor.lo common/connection.lo \
	common/packet.lo common/recv_cq.lo memory/memory_model.lo \
	nic/nic.lo noise/noise.lo node/node.lo node/simple_node.lo \
	pisces/pisces.lo pisces/pisces_arbitrator.lo \
	pisces/pisces_buffer.lo pisces/pisces_branched_switch.lo \
	pisces/pisces_crossbar.lo pisces/pisces_nic.lo \
	pisces/pisces_sender.lo pisces/pisces_switch.lo \
	pisces/pisces_tiled_switch.lo pisces/pisces_memory_model.lo \
	sculpin/sculpin_nic.lo sculpin/sculpin_switch.lo \
	sculpin/sculpin.lo snappr/snappr_inport.lo \
	snappr/snappr_outport.lo snappr/snappr_nic.lo \
	snappr/snappr_switch.lo snappr/snappr_mem.lo snappr/snappr.lo \
	network/network_message.lo interconnect/interconnect.lo \
	switch/network_switch.lo topology/fully_connected.lo \
	topology/cascade.lo topology/dragonfly.lo \
	topology/dragonfly_plus.lo topology/fat_tree.lo \
	topology/file.lo topology/torus.lo topology/hypercube.lo \
	topology/coordinates.lo topology/traffic/traffic.lo \
	router/router.lo router/table_routing.lo \
	router/fat_tree_router.lo router/cascade_routing.lo \
	router/dragonfly_routing.lo router/dragonfly_routing.lo \
	router/dragonfly_plus_routing.lo router/hypercube_routing.lo \
	router/cascade_routing.lo router/torus_routing.lo \
	topology/star.lo topology/structured_topology.lo \
	topology/cartesian_topology.lo topology/topology.lo \
	$(am__objects_3)
libsstmac_hw_la_OBJECTS = $(am_libsstmac_hw_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libsstmac_hw_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(libsstmac_hw_la_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)/sstmac/common
depcomp = $(SHELL) $(top_srcdir)/bin/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = common/$(DEPDIR)/connection.Plo \
	common/$(DEPDIR)/packet.Plo common/$(DEPDIR)/recv_cq.Plo \
	interconnect/$(DEPDIR)/interconnect.Plo \
	logp/$(DEPDIR)/logp_memory_model.Plo \
	logp/$(DEPDIR)/logp_nic.Plo logp/$(DEPDIR)/logp_switch.Plo \
	memory/$(DEPDIR)/memory_model.Plo \
	merlin/$(DEPDIR)/merlin_nic.Plo \
	network/$(DEPDIR)/network_message.Plo nic/$(DEPDIR)/nic.Plo \
	node/$(DEPDIR)/node.Plo node/$(DEPDIR)/simple_node.Plo \
	noise/$(DEPDIR)/noise.Plo pisces/$(DEPDIR)/pisces.Plo \
	pisces/$(DEPDIR)/pisces_arbitrator.Plo \
	pisces/$(DEPDIR)/pisces_branched_switch.Plo \
	pisces/$(DEPDIR)/pisces_buffer.Plo \
	pisces/$(DEPDIR)/pisces_crossbar.Plo \
	pisces/$(DEPDIR)/pisces_memory_model.Plo \
	pisces/$(DEPDIR)/pisces_nic.Plo \
	pisces/$(DEPDIR)/pisces_sender.Plo \
	pisces/$(DEPDIR)/pisces_switch.Plo \
	pisces/$(DEPDIR)/pisces_tiled_switch.Plo \
	processor/$(DEPDIR)/instruction_processor.Plo \
	processor/$(DEPDIR)/processor.Plo \
	processor/$(DEPDIR)/simple_processor.Plo \
	router/$(DEPDIR)/cascade_routing.Plo \
	router/$(DEPDIR)/dragonfly_plus_routing.Plo \
	router/$(DEPDIR)/dragonfly_routing.Plo \
	router/$(DEPDIR)/fat_tree_router.Plo \
	router/$(DEPDIR)/hypercube_routing.Plo \
	router/$(DEPDIR)/router.Plo router/$(DEPDIR)/table_routing.Plo \
	router/$(DEPDIR)/torus_routing.Plo \
	sculpin/$(DEPDIR)/sculpin.Plo \
	sculpin/$(DEPDIR)/sculpin_nic.Plo \
	sculpin/$(DEPDIR)/sculpin_switch.Plo \
	snappr/$(DEPDIR)/snappr.Plo snappr/$(DEPDIR)/snappr_inport.Plo \
	snappr/$(DEPDIR)/snappr_mem.Plo \
	snappr/$(DEPDIR)/snappr_nic.Plo \
	snappr/$(DEPDIR)/snappr_outport.Plo \
	snappr/$(DEPDIR)/snappr_switch.Plo \
	switch/$(DEPDIR)/network_switch.Plo \
	topology/$(DEPDIR)/cartesian_topology.Plo \
	topology/$(DEPDIR)/cascade.Plo \
	topology/$(DEPDIR)/coordinates.Plo \
	topology/$(DEPDIR)/dragonfly.Plo \
	topology/$(DEPDIR)/dragonfly_plus.Plo \
	topology/$(DEPDIR)/fat_tree.Plo topology/$(DEPDIR)/file.Plo \
	topology/$(DEPDIR)/fully_connected.Plo \
	topology/$(DEPDIR)/hypercube.Plo topology/$(DEPDIR)/star.Plo \
	topology/$(DEPDIR)/structured_topology.Plo \
	topology/$(DEPDIR)/topology.Plo topology/$(DEPDIR)/torus.Plo \
	topology/traffic/$(DEPDIR)/traffic.Plo \
	vtk/$(DEPDIR)/statoutputexodus.Plo \
	vtk/$(DEPDIR)/vtkTrafficSource.Plo vtk/$(DEPDIR)/vtk_stats.Plo
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_@AM_V@)
am__v_CXX_ = $(am__v_CXX_@AM_DEFAULT_V@)
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_@AM_V@)
am__v_CXXLD_ = $(am__v_CXXLD_@AM_DEFAULT_V@)
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libsstmac_hw_la_SOURCES)
DIST_SOURCES = $(am__libsstmac_hw_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__nobase_library_include_HEADERS_DIST = vtk/vtk_stats.h \
	vtk/vtkTrafficSource.h vtk/stattraffic.h \
	vtk/statoutputexodus.h logp/logp_nic.h logp/logp_switch.h \
	logp/logp_switch_fwd.h logp/logp_memory_model.h \
	processor/processor.h processor/processor_fwd.h \
	processor/instruction_processor.h processor/simple_processor.h \
	memory/memory_id.h memory/memory_model.h \
	memory/memory_model_fwd.h nic/nic_fwd.h nic/nic.h \
	noise/noise.h node/node.h node/node_fwd.h node/simple_node.h \
	common/flow.h common/flow_fwd.h common/connection.h \
	common/connection_fwd.h common/failable.h common/packet.h \
	common/packet_fwd.h common/recv_cq.h common/unique_id.h \
	pisces/pisces.h pisces/pisces_fwd.h pisces/pisces_arbitrator.h \
	pisces/pisces_buffer.h pisces/pisces_branched_switch.h \
	pisces/pisces_crossbar.h pisces/pisces_nic.h \
	pisces/pisces_sender.h pisces/pisces_switch.h \
	pisces/pisces_tiled_switch.h pisces/pisces_memory_model.h \
	sculpin/sculpin_nic.h sculpin/sculpin_switch.h \
	sculpin/sculpin.h snappr/snappr_nic.h snappr/snappr_switch.h \
	snappr/snappr_switch_fwd.h snappr/snappr_mem.h snappr/snappr.h \
	snappr/snappr_inport.h snappr/snappr_inport_fwd.h \
	snappr/snappr_outport.h network/network_id.h \
	network/network_message.h network/network_message_fwd.h \
	interconnect/interconnect.h interconnect/interconnect_fwd.h \
	switch/network_switch.h switch/network_switch_fwd.h \
	topology/fully_connected.h topology/cascade.h \
	topology/dragonfly.h topology/dragonfly_plus.h \
	topology/fat_tree.h topology/file.h topology/torus.h \
	topology/hypercube.h topology/topology.h \
	topology/topology_fwd.h topology/structured_topology_fwd.h \
	topology/coordinates.h topology/cartesian_topology.h \
	topology/star.h topology/structured_topology.h \
	topology/traffic/traffic.h router/router.h router/router_fwd.h \
	router/fat_tree_router.h
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(library_includedir)"
HEADERS = $(nobase_library_include_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.common \
	$(top_srcdir)/Makefile.includes $(top_srcdir)/Makefile.link \
	$(top_srcdir)/bin/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CLANG_CPPFLAGS = @CLANG_CPPFLAGS@
CLANG_INSTALL_DIR = @CLANG_INSTALL_DIR@
CLANG_LDFLAGS = @CLANG_LDFLAGS@
CLANG_LIBTOOLING_CXX_FLAGS = @CLANG_LIBTOOLING_CXX_FLAGS@
CLANG_LIBTOOLING_C_FLAGS = @CLANG_LIBTOOLING_C_FLAGS@
CLANG_LIBTOOLING_LIBS = @CLANG_LIBTOOLING_LIBS@
CLANG_LIBTOOLING_SYSTEM_LIBS = @CLANG_LIBTOOLING_SYSTEM_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFAULT_INCLUDE_PATHS = @DEFAULT_INCLUDE_PATHS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DOT = @DOT@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ERROR_CFLAGS = @ERROR_CFLAGS@
ERROR_CXXFLAGS = @ERROR_CXXFLAGS@
EXEEXT = @EXEEXT@
FC = @FC@
FCFLAGS = @FCFLAGS@
FGREP = @FGREP@
GREP = @GREP@
HAVE_DOT = @HAVE_DOT@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LD = @LD@
LDFLAGS = @LDFLAGS@
LD_SO_FLAGS = @LD_SO_FLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LLVM_CPPFLAGS = @LLVM_CPPFLAGS@
LLVM_LDFLAGS = @LLVM_LDFLAGS@
LLVM_LIBS = @LLVM_LIBS@
LLVM_SYSTEM_LIBS = @LLVM_SYSTEM_LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
LT_SYS_LIBRARY_PATH = @LT_SYS_LIBRARY_PATH@
MACSDK_CFLAGS = @MACSDK_CFLAGS@
MACSDK_CXXFLAGS = @MACSDK_CXXFLAGS@
MAKEINFO = @MAKEINFO@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
MPI_AINT = @MPI_AINT@
NM = @NM@
NMEDIT = @NMEDIT@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OTF2_CPPFLAGS = @OTF2_CPPFLAGS@
OTF2_LDFLAGS = @OTF2_LDFLAGS@
OTF2_LIBS = @OTF2_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PTHREAD_MACRO_DEF_COND_INITIALIZER = @PTHREAD_MACRO_DEF_COND_INITIALIZER@
PTHREAD_MACRO_DEF_MUTEX_INITIALIZER = @PTHREAD_MACRO_DEF_MUTEX_INITIALIZER@
PTHREAD_MACRO_DEF_ONCE_INITIALIZER = @PTHREAD_MACRO_DEF_ONCE_INITIALIZER@
PTH_CPPFLAGS = @PTH_CPPFLAGS@
PTH_LDFLAGS = @PTH_LDFLAGS@
PY_CPPFLAGS = @PY_CPPFLAGS@
PY_LDFLAGS = @PY_LDFLAGS@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SPACK_CC = @SPACK_CC@
SPACK_CXX = @SPACK_CXX@
SSTMAC_LIBVERSION = @SSTMAC_LIBVERSION@
SST_CPPFLAGS = @SST_CPPFLAGS@
SST_CXXFLAGS = @SST_CXXFLAGS@
SST_ELEMENTS_CPPFLAGS = @SST_ELEMENTS_CPPFLAGS@
SST_LDFLAGS = @SST_LDFLAGS@
STD_CXXFLAGS = @STD_CXXFLAGS@
STRIP = @STRIP@
SYS_TYPES_FULL_PATH = @SYS_TYPES_FULL_PATH@
UCONTEXT_CPPFLAGS = @UCONTEXT_CPPFLAGS@
UCONTEXT_LDFLAGS = @UCONTEXT_LDFLAGS@
VERSION = @VERSION@
VTK_CPPFLAGS = @VTK_CPPFLAGS@
VTK_LDFLAGS = @VTK_LDFLAGS@
VTK_LIBS = @VTK_LIBS@
WARNING_CFLAGS = @WARNING_CFLAGS@
WARNING_CXXFLAGS = @WARNING_CXXFLAGS@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
ac_ct_FC = @ac_ct_FC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
git_branch = @git_branch@
have_float_128 = @have_float_128@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
mt_cmdline_args = @mt_cmdline_args@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
pycfg = @pycfg@
pyexe = @pyexe@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sst_prefix = @sst_prefix@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
AM_CPPFLAGS = -I$(top_builddir) -I$(top_srcdir) \
	-I$(top_srcdir)/include -I$(top_srcdir)/sprockit \
	-I$(top_builddir)/sprockit $(am__append_1) $(PTH_CPPFLAGS) \
	$(UCONTEXT_CPPFLAGS) $(am__append_12) $(am__append_13)
AM_LDFLAGS = $(PTH_LDFLAGS) $(UCONTEXT_LDFLAGS) $(am__append_2)
AM_CXXFLAGS = $(STD_CXXFLAGS) $(ERROR_CXXFLAGS) $(WARNING_CXXFLAGS) \
	$(am__append_3) $(am__append_5)
AM_CFLAGS = $(ERROR_CFLAGS) $(WARNING_CFLAGS) $(am__append_4)
noinst_LTLIBRARIES = libsstmac_hw.la
libsstmac_hw_la_LDFLAGS = $(am__append_10)
libsstmac_hw_la_LIBADD = $(am__append_11)
library_includedir = $(includedir)/sstmac/hardware
libsstmac_hw_la_SOURCES = $(am__append_6) $(am__append_8) \
	logp/logp_nic.cc logp/logp_switch.cc logp/logp_memory_model.cc \
	processor/processor.cc processor/simple_processor.cc \
	processor/instruction_processor.cc common/connection.cc \
	common/packet.cc common/recv_cq.cc memory/memory_model.cc \
	nic/nic.cc noise/noise.cc node/node.cc node/simple_node.cc \
	pisces/pisces.cc pisces/pisces_arbitrator.cc \
	pisces/pisces_buffer.cc pisces/pisces_branched_switch.cc \
	pisces/pisces_crossbar.cc pisces/pisces_nic.cc \
	pisces/pisces_sender.cc pisces/pisces_switch.cc \
	pisces/pisces_tiled_switch.cc pisces/pisces_memory_model.cc \
	sculpin/sculpin_nic.cc sculpin/sculpin_switch.cc \
	sculpin/sculpin.cc snappr/snappr_inport.cc \
	snappr/snappr_outport.cc snappr/snappr_nic.cc \
	snappr/snappr_switch.cc snappr/snappr_mem.cc snappr/snappr.cc \
	network/network_message.cc interconnect/interconnect.cc \
	switch/network_switch.cc topology/fully_connected.cc \
	topology/cascade.cc topology/dragonfly.cc \
	topology/dragonfly_plus.cc topology/fat_tree.cc \
	topology/file.cc topology/torus.cc topology/hypercube.cc \
	topology/coordinates.cc topology/traffic/traffic.cc \
	router/router.cc router/table_routing.cc \
	router/fat_tree_router.cc router/cascade_routing.cc \
	router/dragonfly_routing.cc router/dragonfly_routing.cc \
	router/dragonfly_plus_routing.cc router/hypercube_routing.cc \
	router/cascade_routing.cc router/torus_routing.cc \
	topology/star.cc topology/structured_topology.cc \
	topology/cartesian_topology.cc topology/topology.cc \
	$(am__append_14)
nobase_library_include_HEADERS = $(am__append_7) $(am__append_9) \
	logp/logp_nic.h logp/logp_switch.h logp/logp_switch_fwd.h \
	logp/logp_memory_model.h processor/processor.h \
	processor/processor_fwd.h processor/instruction_processor.h \
	processor/simple_processor.h memory/memory_id.h \
	memory/memory_model.h memory/memory_model_fwd.h nic/nic_fwd.h \
	nic/nic.h noise/noise.h node/node.h node/node_fwd.h \
	node/simple_node.h common/flow.h common/flow_fwd.h \
	common/connection.h common/connection_fwd.h common/failable.h \
	common/packet.h common/packet_fwd.h common/recv_cq.h \
	common/unique_id.h pisces/pisces.h pisces/pisces_fwd.h \
	pisces/pisces_arbitrator.h pisces/pisces_buffer.h \
	pisces/pisces_branched_switch.h pisces/pisces_crossbar.h \
	pisces/pisces_nic.h pisces/pisces_sender.h \
	pisces/pisces_switch.h pisces/pisces_tiled_switch.h \
	pisces/pisces_memory_model.h sculpin/sculpin_nic.h \
	sculpin/sculpin_switch.h sculpin/sculpin.h snappr/snappr_nic.h \
	snappr/snappr_switch.h snappr/snappr_switch_fwd.h \
	snappr/snappr_mem.h snappr/snappr.h snappr/snappr_inport.h \
	snappr/snappr_inport_fwd.h snappr/snappr_outport.h \
	network/network_id.h network/network_message.h \
	network/network_message_fwd.h interconnect/interconnect.h \
	interconnect/interconnect_fwd.h switch/network_switch.h \
	switch/network_switch_fwd.h topology/fully_connected.h \
	topology/cascade.h topology/dragonfly.h \
	topology/dragonfly_plus.h topology/fat_tree.h topology/file.h \
	topology/torus.h topology/hypercube.h topology/topology.h \
	topology/topology_fwd.h topology/structured_topology_fwd.h \
	topology/coordinates.h topology/cartesian_topology.h \
	topology/star.h topology/structured_topology.h \
	topology/traffic/traffic.h router/router.h router/router_fwd.h \
	router/fat_tree_router.h
all: all-am

.SUFFIXES:
.SUFFIXES: .cc .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.common $(top_srcdir)/Makefile.includes $(top_srcdir)/Makefile.link $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign sstmac/hardware/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign sstmac/hardware/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/Makefile.common $(top_srcdir)/Makefile.includes $(top_srcdir)/Makefile.link $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
vtk/$(am__dirstamp):
	@$(MKDIR_P) vtk
	@: > vtk/$(am__dirstamp)
vtk/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) vtk/$(DEPDIR)
	@: > vtk/$(DEPDIR)/$(am__dirstamp)
vtk/vtk_stats.lo: vtk/$(am__dirstamp) vtk/$(DEPDIR)/$(am__dirstamp)
vtk/vtkTrafficSource.lo: vtk/$(am__dirstamp) \
	vtk/$(DEPDIR)/$(am__dirstamp)
vtk/statoutputexodus.lo: vtk/$(am__dirstamp) \
	vtk/$(DEPDIR)/$(am__dirstamp)
logp/$(am__dirstamp):
	@$(MKDIR_P) logp
	@: > logp/$(am__dirstamp)
logp/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) logp/$(DEPDIR)
	@: > logp/$(DEPDIR)/$(am__dirstamp)
logp/logp_nic.lo: logp/$(am__dirstamp) logp/$(DEPDIR)/$(am__dirstamp)
logp/logp_switch.lo: logp/$(am__dirstamp) \
	logp/$(DEPDIR)/$(am__dirstamp)
logp/logp_memory_model.lo: logp/$(am__dirstamp) \
	logp/$(DEPDIR)/$(am__dirstamp)
processor/$(am__dirstamp):
	@$(MKDIR_P) processor
	@: > processor/$(am__dirstamp)
processor/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) processor/$(DEPDIR)
	@: > processor/$(DEPDIR)/$(am__dirstamp)
processor/processor.lo: processor/$(am__dirstamp) \
	processor/$(DEPDIR)/$(am__dirstamp)
processor/simple_processor.lo: processor/$(am__dirstamp) \
	processor/$(DEPDIR)/$(am__dirstamp)
processor/instruction_processor.lo: processor/$(am__dirstamp) \
	processor/$(DEPDIR)/$(am__dirstamp)
common/$(am__dirstamp):
	@$(MKDIR_P) common
	@: > common/$(am__dirstamp)
common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) common/$(DEPDIR)
	@: > common/$(DEPDIR)/$(am__dirstamp)
common/connection.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/packet.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/recv_cq.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
memory/$(am__dirstamp):
	@$(MKDIR_P) memory
	@: > memory/$(am__dirstamp)
memory/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) memory/$(DEPDIR)
	@: > memory/$(DEPDIR)/$(am__dirstamp)
memory/memory_model.lo: memory/$(am__dirstamp) \
	memory/$(DEPDIR)/$(am__dirstamp)
nic/$(am__dirstamp):
	@$(MKDIR_P) nic
	@: > nic/$(am__dirstamp)
nic/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) nic/$(DEPDIR)
	@: > nic/$(DEPDIR)/$(am__dirstamp)
nic/nic.lo: nic/$(am__dirstamp) nic/$(DEPDIR)/$(am__dirstamp)
noise/$(am__dirstamp):
	@$(MKDIR_P) noise
	@: > noise/$(am__dirstamp)
noise/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) noise/$(DEPDIR)
	@: > noise/$(DEPDIR)/$(am__dirstamp)
noise/noise.lo: noise/$(am__dirstamp) noise/$(DEPDIR)/$(am__dirstamp)
node/$(am__dirstamp):
	@$(MKDIR_P) node
	@: > node/$(am__dirstamp)
node/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) node/$(DEPDIR)
	@: > node/$(DEPDIR)/$(am__dirstamp)
node/node.lo: node/$(am__dirstamp) node/$(DEPDIR)/$(am__dirstamp)
node/simple_node.lo: node/$(am__dirstamp) \
	node/$(DEPDIR)/$(am__dirstamp)
pisces/$(am__dirstamp):
	@$(MKDIR_P) pisces
	@: > pisces/$(am__dirstamp)
pisces/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) pisces/$(DEPDIR)
	@: > pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_arbitrator.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_buffer.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_branched_switch.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_crossbar.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_nic.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_sender.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_switch.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_tiled_switch.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
pisces/pisces_memory_model.lo: pisces/$(am__dirstamp) \
	pisces/$(DEPDIR)/$(am__dirstamp)
sculpin/$(am__dirstamp):
	@$(MKDIR_P) sculpin
	@: > sculpin/$(am__dirstamp)
sculpin/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) sculpin/$(DEPDIR)
	@: > sculpin/$(DEPDIR)/$(am__dirstamp)
sculpin/sculpin_nic.lo: sculpin/$(am__dirstamp) \
	sculpin/$(DEPDIR)/$(am__dirstamp)
sculpin/sculpin_switch.lo: sculpin/$(am__dirstamp) \
	sculpin/$(DEPDIR)/$(am__dirstamp)
sculpin/sculpin.lo: sculpin/$(am__dirstamp) \
	sculpin/$(DEPDIR)/$(am__dirstamp)
snappr/$(am__dirstamp):
	@$(MKDIR_P) snappr
	@: > snappr/$(am__dirstamp)
snappr/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) snappr/$(DEPDIR)
	@: > snappr/$(DEPDIR)/$(am__dirstamp)
snappr/snappr_inport.lo: snappr/$(am__dirstamp) \
	snappr/$(DEPDIR)/$(am__dirstamp)
snappr/snappr_outport.lo: snappr/$(am__dirstamp) \
	snappr/$(DEPDIR)/$(am__dirstamp)
snappr/snappr_nic.lo: snappr/$(am__dirstamp) \
	snappr/$(DEPDIR)/$(am__dirstamp)
snappr/snappr_switch.lo: snappr/$(am__dirstamp) \
	snappr/$(DEPDIR)/$(am__dirstamp)
snappr/snappr_mem.lo: snappr/$(am__dirstamp) \
	snappr/$(DEPDIR)/$(am__dirstamp)
snappr/snappr.lo: snappr/$(am__dirstamp) \
	snappr/$(DEPDIR)/$(am__dirstamp)
network/$(am__dirstamp):
	@$(MKDIR_P) network
	@: > network/$(am__dirstamp)
network/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) network/$(DEPDIR)
	@: > network/$(DEPDIR)/$(am__dirstamp)
network/network_message.lo: network/$(am__dirstamp) \
	network/$(DEPDIR)/$(am__dirstamp)
interconnect/$(am__dirstamp):
	@$(MKDIR_P) interconnect
	@: > interconnect/$(am__dirstamp)
interconnect/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) interconnect/$(DEPDIR)
	@: > interconnect/$(DEPDIR)/$(am__dirstamp)
interconnect/interconnect.lo: interconnect/$(am__dirstamp) \
	interconnect/$(DEPDIR)/$(am__dirstamp)
switch/$(am__dirstamp):
	@$(MKDIR_P) switch
	@: > switch/$(am__dirstamp)
switch/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) switch/$(DEPDIR)
	@: > switch/$(DEPDIR)/$(am__dirstamp)
switch/network_switch.lo: switch/$(am__dirstamp) \
	switch/$(DEPDIR)/$(am__dirstamp)
topology/$(am__dirstamp):
	@$(MKDIR_P) topology
	@: > topology/$(am__dirstamp)
topology/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) topology/$(DEPDIR)
	@: > topology/$(DEPDIR)/$(am__dirstamp)
topology/fully_connected.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/cascade.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/dragonfly.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/dragonfly_plus.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/fat_tree.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/file.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/torus.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/hypercube.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/coordinates.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/traffic/$(am__dirstamp):
	@$(MKDIR_P) topology/traffic
	@: > topology/traffic/$(am__dirstamp)
topology/traffic/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) topology/traffic/$(DEPDIR)
	@: > topology/traffic/$(DEPDIR)/$(am__dirstamp)
topology/traffic/traffic.lo: topology/traffic/$(am__dirstamp) \
	topology/traffic/$(DEPDIR)/$(am__dirstamp)
router/$(am__dirstamp):
	@$(MKDIR_P) router
	@: > router/$(am__dirstamp)
router/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) router/$(DEPDIR)
	@: > router/$(DEPDIR)/$(am__dirstamp)
router/router.lo: router/$(am__dirstamp) \
	router/$(DEPDIR)/$(am__dirstamp)
router/table_routing.lo: router/$(am__dirstamp) \
	router/$(DEPDIR)/$(am__dirstamp)
router/fat_tree_router.lo: router/$(am__dirstamp) \
	router/$(DEPDIR)/$(am__dirstamp)
router/cascade_routing.lo: router/$(am__dirstamp) \
	router/$(DEPDIR)/$(am__dirstamp)
router/dragonfly_routing.lo: router/$(am__dirstamp) \
	router/$(DEPDIR)/$(am__dirstamp)
router/dragonfly_plus_routing.lo: router/$(am__dirstamp) \
	router/$(DEPDIR)/$(am__dirstamp)
router/hypercube_routing.lo: router/$(am__dirstamp) \
	router/$(DEPDIR)/$(am__dirstamp)
router/torus_routing.lo: router/$(am__dirstamp) \
	router/$(DEPDIR)/$(am__dirstamp)
topology/star.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/structured_topology.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/cartesian_topology.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
topology/topology.lo: topology/$(am__dirstamp) \
	topology/$(DEPDIR)/$(am__dirstamp)
merlin/$(am__dirstamp):
	@$(MKDIR_P) merlin
	@: > merlin/$(am__dirstamp)
merlin/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) merlin/$(DEPDIR)
	@: > merlin/$(DEPDIR)/$(am__dirstamp)
merlin/merlin_nic.lo: merlin/$(am__dirstamp) \
	merlin/$(DEPDIR)/$(am__dirstamp)

libsstmac_hw.la: $(libsstmac_hw_la_OBJECTS) $(libsstmac_hw_la_DEPENDENCIES) $(EXTRA_libsstmac_hw_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(libsstmac_hw_la_LINK)  $(libsstmac_hw_la_OBJECTS) $(libsstmac_hw_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f common/*.$(OBJEXT)
	-rm -f common/*.lo
	-rm -f interconnect/*.$(OBJEXT)
	-rm -f interconnect/*.lo
	-rm -f logp/*.$(OBJEXT)
	-rm -f logp/*.lo
	-rm -f memory/*.$(OBJEXT)
	-rm -f memory/*.lo
	-rm -f merlin/*.$(OBJEXT)
	-rm -f merlin/*.lo
	-rm -f network/*.$(OBJEXT)
	-rm -f network/*.lo
	-rm -f nic/*.$(OBJEXT)
	-rm -f nic/*.lo
	-rm -f node/*.$(OBJEXT)
	-rm -f node/*.lo
	-rm -f noise/*.$(OBJEXT)
	-rm -f noise/*.lo
	-rm -f pisces/*.$(OBJEXT)
	-rm -f pisces/*.lo
	-rm -f processor/*.$(OBJEXT)
	-rm -f processor/*.lo
	-rm -f router/*.$(OBJEXT)
	-rm -f router/*.lo
	-rm -f sculpin/*.$(OBJEXT)
	-rm -f sculpin/*.lo
	-rm -f snappr/*.$(OBJEXT)
	-rm -f snappr/*.lo
	-rm -f switch/*.$(OBJEXT)
	-rm -f switch/*.lo
	-rm -f topology/*.$(OBJEXT)
	-rm -f topology/*.lo
	-rm -f topology/traffic/*.$(OBJEXT)
	-rm -f topology/traffic/*.lo
	-rm -f vtk/*.$(OBJEXT)
	-rm -f vtk/*.lo

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/connection.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/packet.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@common/$(DEPDIR)/recv_cq.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@interconnect/$(DEPDIR)/interconnect.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@logp/$(DEPDIR)/logp_memory_model.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@logp/$(DEPDIR)/logp_nic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@logp/$(DEPDIR)/logp_switch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@memory/$(DEPDIR)/memory_model.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@merlin/$(DEPDIR)/merlin_nic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@network/$(DEPDIR)/network_message.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@nic/$(DEPDIR)/nic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@node/$(DEPDIR)/node.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@node/$(DEPDIR)/simple_node.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@noise/$(DEPDIR)/noise.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_arbitrator.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_branched_switch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_buffer.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_crossbar.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_memory_model.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_nic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_sender.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_switch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@pisces/$(DEPDIR)/pisces_tiled_switch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@processor/$(DEPDIR)/instruction_processor.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@processor/$(DEPDIR)/processor.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@processor/$(DEPDIR)/simple_processor.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@router/$(DEPDIR)/cascade_routing.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@router/$(DEPDIR)/dragonfly_plus_routing.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@router/$(DEPDIR)/dragonfly_routing.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@router/$(DEPDIR)/fat_tree_router.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@router/$(DEPDIR)/hypercube_routing.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@router/$(DEPDIR)/router.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@router/$(DEPDIR)/table_routing.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@router/$(DEPDIR)/torus_routing.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@sculpin/$(DEPDIR)/sculpin.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@sculpin/$(DEPDIR)/sculpin_nic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@sculpin/$(DEPDIR)/sculpin_switch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@snappr/$(DEPDIR)/snappr.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@snappr/$(DEPDIR)/snappr_inport.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@snappr/$(DEPDIR)/snappr_mem.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@snappr/$(DEPDIR)/snappr_nic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@snappr/$(DEPDIR)/snappr_outport.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@snappr/$(DEPDIR)/snappr_switch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@switch/$(DEPDIR)/network_switch.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/cartesian_topology.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/cascade.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/coordinates.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/dragonfly.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/dragonfly_plus.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/fat_tree.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/file.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/fully_connected.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/hypercube.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/star.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/structured_topology.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/topology.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/$(DEPDIR)/torus.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@topology/traffic/$(DEPDIR)/traffic.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@vtk/$(DEPDIR)/statoutputexodus.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@vtk/$(DEPDIR)/vtkTrafficSource.Plo@am__quote@ # am--include-marker
@AMDEP_TRUE@@am__include@ @am__quote@vtk/$(DEPDIR)/vtk_stats.Plo@am__quote@ # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cc.o:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cc.lo:
@am__fastdepCXX_TRUE@	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCXX_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Plo
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf common/.libs common/_libs
	-rm -rf interconnect/.libs interconnect/_libs
	-rm -rf logp/.libs logp/_libs
	-rm -rf memory/.libs memory/_libs
	-rm -rf merlin/.libs merlin/_libs
	-rm -rf network/.libs network/_libs
	-rm -rf nic/.libs nic/_libs
	-rm -rf node/.libs node/_libs
	-rm -rf noise/.libs noise/_libs
	-rm -rf pisces/.libs pisces/_libs
	-rm -rf processor/.libs processor/_libs
	-rm -rf router/.libs router/_libs
	-rm -rf sculpin/.libs sculpin/_libs
	-rm -rf snappr/.libs snappr/_libs
	-rm -rf switch/.libs switch/_libs
	-rm -rf topology/.libs topology/_libs
	-rm -rf topology/traffic/.libs topology/traffic/_libs
	-rm -rf vtk/.libs vtk/_libs
install-nobase_library_includeHEADERS: $(nobase_library_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(nobase_library_include_HEADERS)'; test -n "$(library_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(library_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(library_includedir)" || exit 1; \
	fi; \
	$(am__nobase_list) | while read dir files; do \
	  xfiles=; for file in $$files; do \
	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
	    else xfiles="$$xfiles $(srcdir)/$$file"; fi; done; \
	  test -z "$$xfiles" || { \
	    test "x$$dir" = x. || { \
	      echo " $(MKDIR_P) '$(DESTDIR)$(library_includedir)/$$dir'"; \
	      $(MKDIR_P) "$(DESTDIR)$(library_includedir)/$$dir"; }; \
	    echo " $(INSTALL_HEADER) $$xfiles '$(DESTDIR)$(library_includedir)/$$dir'"; \
	    $(INSTALL_HEADER) $$xfiles "$(DESTDIR)$(library_includedir)/$$dir" || exit $$?; }; \
	done

uninstall-nobase_library_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nobase_library_include_HEADERS)'; test -n "$(library_includedir)" || list=; \
	$(am__nobase_strip_setup); files=`$(am__nobase_strip)`; \
	dir='$(DESTDIR)$(library_includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(library_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f common/$(DEPDIR)/$(am__dirstamp)
	-rm -f common/$(am__dirstamp)
	-rm -f interconnect/$(DEPDIR)/$(am__dirstamp)
	-rm -f interconnect/$(am__dirstamp)
	-rm -f logp/$(DEPDIR)/$(am__dirstamp)
	-rm -f logp/$(am__dirstamp)
	-rm -f memory/$(DEPDIR)/$(am__dirstamp)
	-rm -f memory/$(am__dirstamp)
	-rm -f merlin/$(DEPDIR)/$(am__dirstamp)
	-rm -f merlin/$(am__dirstamp)
	-rm -f network/$(DEPDIR)/$(am__dirstamp)
	-rm -f network/$(am__dirstamp)
	-rm -f nic/$(DEPDIR)/$(am__dirstamp)
	-rm -f nic/$(am__dirstamp)
	-rm -f node/$(DEPDIR)/$(am__dirstamp)
	-rm -f node/$(am__dirstamp)
	-rm -f noise/$(DEPDIR)/$(am__dirstamp)
	-rm -f noise/$(am__dirstamp)
	-rm -f pisces/$(DEPDIR)/$(am__dirstamp)
	-rm -f pisces/$(am__dirstamp)
	-rm -f processor/$(DEPDIR)/$(am__dirstamp)
	-rm -f processor/$(am__dirstamp)
	-rm -f router/$(DEPDIR)/$(am__dirstamp)
	-rm -f router/$(am__dirstamp)
	-rm -f sculpin/$(DEPDIR)/$(am__dirstamp)
	-rm -f sculpin/$(am__dirstamp)
	-rm -f snappr/$(DEPDIR)/$(am__dirstamp)
	-rm -f snappr/$(am__dirstamp)
	-rm -f switch/$(DEPDIR)/$(am__dirstamp)
	-rm -f switch/$(am__dirstamp)
	-rm -f topology/$(DEPDIR)/$(am__dirstamp)
	-rm -f topology/$(am__dirstamp)
	-rm -f topology/traffic/$(DEPDIR)/$(am__dirstamp)
	-rm -f topology/traffic/$(am__dirstamp)
	-rm -f vtk/$(DEPDIR)/$(am__dirstamp)
	-rm -f vtk/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f common/$(DEPDIR)/connection.Plo
	-rm -f common/$(DEPDIR)/packet.Plo
	-rm -f common/$(DEPDIR)/recv_cq.Plo
	-rm -f interconnect/$(DEPDIR)/interconnect.Plo
	-rm -f logp/$(DEPDIR)/logp_memory_model.Plo
	-rm -f logp/$(DEPDIR)/logp_nic.Plo
	-rm -f logp/$(DEPDIR)/logp_switch.Plo
	-rm -f memory/$(DEPDIR)/memory_model.Plo
	-rm -f merlin/$(DEPDIR)/merlin_nic.Plo
	-rm -f network/$(DEPDIR)/network_message.Plo
	-rm -f nic/$(DEPDIR)/nic.Plo
	-rm -f node/$(DEPDIR)/node.Plo
	-rm -f node/$(DEPDIR)/simple_node.Plo
	-rm -f noise/$(DEPDIR)/noise.Plo
	-rm -f pisces/$(DEPDIR)/pisces.Plo
	-rm -f pisces/$(DEPDIR)/pisces_arbitrator.Plo
	-rm -f pisces/$(DEPDIR)/pisces_branched_switch.Plo
	-rm -f pisces/$(DEPDIR)/pisces_buffer.Plo
	-rm -f pisces/$(DEPDIR)/pisces_crossbar.Plo
	-rm -f pisces/$(DEPDIR)/pisces_memory_model.Plo
	-rm -f pisces/$(DEPDIR)/pisces_nic.Plo
	-rm -f pisces/$(DEPDIR)/pisces_sender.Plo
	-rm -f pisces/$(DEPDIR)/pisces_switch.Plo
	-rm -f pisces/$(DEPDIR)/pisces_tiled_switch.Plo
	-rm -f processor/$(DEPDIR)/instruction_processor.Plo
	-rm -f processor/$(DEPDIR)/processor.Plo
	-rm -f processor/$(DEPDIR)/simple_processor.Plo
	-rm -f router/$(DEPDIR)/cascade_routing.Plo
	-rm -f router/$(DEPDIR)/dragonfly_plus_routing.Plo
	-rm -f router/$(DEPDIR)/dragonfly_routing.Plo
	-rm -f router/$(DEPDIR)/fat_tree_router.Plo
	-rm -f router/$(DEPDIR)/hypercube_routing.Plo
	-rm -f router/$(DEPDIR)/router.Plo
	-rm -f router/$(DEPDIR)/table_routing.Plo
	-rm -f router/$(DEPDIR)/torus_routing.Plo
	-rm -f sculpin/$(DEPDIR)/sculpin.Plo
	-rm -f sculpin/$(DEPDIR)/sculpin_nic.Plo
	-rm -f sculpin/$(DEPDIR)/sculpin_switch.Plo
	-rm -f snappr/$(DEPDIR)/snappr.Plo
	-rm -f snappr/$(DEPDIR)/snappr_inport.Plo
	-rm -f snappr/$(DEPDIR)/snappr_mem.Plo
	-rm -f snappr/$(DEPDIR)/snappr_nic.Plo
	-rm -f snappr/$(DEPDIR)/snappr_outport.Plo
	-rm -f snappr/$(DEPDIR)/snappr_switch.Plo
	-rm -f switch/$(DEPDIR)/network_switch.Plo
	-rm -f topology/$(DEPDIR)/cartesian_topology.Plo
	-rm -f topology/$(DEPDIR)/cascade.Plo
	-rm -f topology/$(DEPDIR)/coordinates.Plo
	-rm -f topology/$(DEPDIR)/dragonfly.Plo
	-rm -f topology/$(DEPDIR)/dragonfly_plus.Plo
	-rm -f topology/$(DEPDIR)/fat_tree.Plo
	-rm -f topology/$(DEPDIR)/file.Plo
	-rm -f topology/$(DEPDIR)/fully_connected.Plo
	-rm -f topology/$(DEPDIR)/hypercube.Plo
	-rm -f topology/$(DEPDIR)/star.Plo
	-rm -f topology/$(DEPDIR)/structured_topology.Plo
	-rm -f topology/$(DEPDIR)/topology.Plo
	-rm -f topology/$(DEPDIR)/torus.Plo
	-rm -f topology/traffic/$(DEPDIR)/traffic.Plo
	-rm -f vtk/$(DEPDIR)/statoutputexodus.Plo
	-rm -f vtk/$(DEPDIR)/vtkTrafficSource.Plo
	-rm -f vtk/$(DEPDIR)/vtk_stats.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-nobase_library_includeHEADERS

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f common/$(DEPDIR)/connection.Plo
	-rm -f common/$(DEPDIR)/packet.Plo
	-rm -f common/$(DEPDIR)/recv_cq.Plo
	-rm -f interconnect/$(DEPDIR)/interconnect.Plo
	-rm -f logp/$(DEPDIR)/logp_memory_model.Plo
	-rm -f logp/$(DEPDIR)/logp_nic.Plo
	-rm -f logp/$(DEPDIR)/logp_switch.Plo
	-rm -f memory/$(DEPDIR)/memory_model.Plo
	-rm -f merlin/$(DEPDIR)/merlin_nic.Plo
	-rm -f network/$(DEPDIR)/network_message.Plo
	-rm -f nic/$(DEPDIR)/nic.Plo
	-rm -f node/$(DEPDIR)/node.Plo
	-rm -f node/$(DEPDIR)/simple_node.Plo
	-rm -f noise/$(DEPDIR)/noise.Plo
	-rm -f pisces/$(DEPDIR)/pisces.Plo
	-rm -f pisces/$(DEPDIR)/pisces_arbitrator.Plo
	-rm -f pisces/$(DEPDIR)/pisces_branched_switch.Plo
	-rm -f pisces/$(DEPDIR)/pisces_buffer.Plo
	-rm -f pisces/$(DEPDIR)/pisces_crossbar.Plo
	-rm -f pisces/$(DEPDIR)/pisces_memory_model.Plo
	-rm -f pisces/$(DEPDIR)/pisces_nic.Plo
	-rm -f pisces/$(DEPDIR)/pisces_sender.Plo
	-rm -f pisces/$(DEPDIR)/pisces_switch.Plo
	-rm -f pisces/$(DEPDIR)/pisces_tiled_switch.Plo
	-rm -f processor/$(DEPDIR)/instruction_processor.Plo
	-rm -f processor/$(DEPDIR)/processor.Plo
	-rm -f processor/$(DEPDIR)/simple_processor.Plo
	-rm -f router/$(DEPDIR)/cascade_routing.Plo
	-rm -f router/$(DEPDIR)/dragonfly_plus_routing.Plo
	-rm -f router/$(DEPDIR)/dragonfly_routing.Plo
	-rm -f router/$(DEPDIR)/fat_tree_router.Plo
	-rm -f router/$(DEPDIR)/hypercube_routing.Plo
	-rm -f router/$(DEPDIR)/router.Plo
	-rm -f router/$(DEPDIR)/table_routing.Plo
	-rm -f router/$(DEPDIR)/torus_routing.Plo
	-rm -f sculpin/$(DEPDIR)/sculpin.Plo
	-rm -f sculpin/$(DEPDIR)/sculpin_nic.Plo
	-rm -f sculpin/$(DEPDIR)/sculpin_switch.Plo
	-rm -f snappr/$(DEPDIR)/snappr.Plo
	-rm -f snappr/$(DEPDIR)/snappr_inport.Plo
	-rm -f snappr/$(DEPDIR)/snappr_mem.Plo
	-rm -f snappr/$(DEPDIR)/snappr_nic.Plo
	-rm -f snappr/$(DEPDIR)/snappr_outport.Plo
	-rm -f snappr/$(DEPDIR)/snappr_switch.Plo
	-rm -f switch/$(DEPDIR)/network_switch.Plo
	-rm -f topology/$(DEPDIR)/cartesian_topology.Plo
	-rm -f topology/$(DEPDIR)/cascade.Plo
	-rm -f topology/$(DEPDIR)/coordinates.Plo
	-rm -f topology/$(DEPDIR)/dragonfly.Plo
	-rm -f topology/$(DEPDIR)/dragonfly_plus.Plo
	-rm -f topology/$(DEPDIR)/fat_tree.Plo
	-rm -f topology/$(DEPDIR)/file.Plo
	-rm -f topology/$(DEPDIR)/fully_connected.Plo
	-rm -f topology/$(DEPDIR)/hypercube.Plo
	-rm -f topology/$(DEPDIR)/star.Plo
	-rm -f topology/$(DEPDIR)/structured_topology.Plo
	-rm -f topology/$(DEPDIR)/topology.Plo
	-rm -f topology/$(DEPDIR)/torus.Plo
	-rm -f topology/traffic/$(DEPDIR)/traffic.Plo
	-rm -f vtk/$(DEPDIR)/statoutputexodus.Plo
	-rm -f vtk/$(DEPDIR)/vtkTrafficSource.Plo
	-rm -f vtk/$(DEPDIR)/vtk_stats.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-nobase_library_includeHEADERS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man \
	install-nobase_library_includeHEADERS install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am \
	uninstall-nobase_library_includeHEADERS

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
